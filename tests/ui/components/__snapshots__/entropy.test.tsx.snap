// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Entropy component matches the snapshot when drawn upon and insufficient entropy 1`] = `
<Container>
  <CenteredText
    msg="50 %"
    style={
      Object {
        "backgroundColor": "black",
        "color": "#ffefdf",
        "fontSize": 22,
        "position": "absolute",
        "top": "20%",
      }
    }
  />
  <Block>
    <MaskedImageComponent
      addPoint={[Function]}
    />
  </Block>
  <Component
    style={
      Object {
        "bottom": "5%",
        "position": "absolute",
      }
    }
  >
    <Button
      accent={false}
      disabled={true}
      icon={null}
      onLongPress={null}
      onPress={[Function]}
      primary={false}
      raised={true}
      style={Object {}}
      testID={null}
      text="NEXT STEP"
      upperCase={true}
    />
  </Component>
</Container>
`;

exports[`Entropy component matches the snapshot when not drawn upon and insufficient entropy 1`] = `
<Container>
  <CenteredText
    msg="For security purposes, we need some randomness. Please put your finger anywhere on the screen and draw on it randomly."
    style={
      Object {
        "backgroundColor": "black",
        "color": "#ffefdf",
        "fontSize": 22,
        "position": "absolute",
        "top": "20%",
      }
    }
  />
  <Block>
    <MaskedImageComponent
      addPoint={[Function]}
    />
  </Block>
  <Component
    style={
      Object {
        "bottom": "5%",
        "position": "absolute",
      }
    }
  >
    <Button
      accent={false}
      disabled={true}
      icon={null}
      onLongPress={null}
      onPress={[Function]}
      primary={false}
      raised={true}
      style={Object {}}
      testID={null}
      text="NEXT STEP"
      upperCase={true}
    />
  </Component>
</Container>
`;

exports[`Entropy component matches the snapshot with when drawn upon and sufficient entropy 1`] = `
<Container>
  <CenteredText
    msg="100 %"
    style={
      Object {
        "backgroundColor": "black",
        "color": "#ffefdf",
        "fontSize": 22,
        "position": "absolute",
        "top": "20%",
      }
    }
  />
  <Block>
    <MaskedImageComponent
      addPoint={[Function]}
    />
  </Block>
  <Component
    style={
      Object {
        "bottom": "5%",
        "position": "absolute",
      }
    }
  >
    <Button
      accent={false}
      disabled={false}
      icon={null}
      onLongPress={null}
      onPress={[Function]}
      primary={false}
      raised={true}
      style={Object {}}
      testID={null}
      text="NEXT STEP"
      upperCase={true}
    />
  </Component>
</Container>
`;

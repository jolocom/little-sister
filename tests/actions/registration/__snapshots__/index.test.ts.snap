// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Registration action creators createIdentity should attempt to create an identity 1`] = `
Array [
  Object {
    "type": "SET_LOADING_MSG",
    "value": "Encrypting and storing data locally",
  },
  Object {
    "type": "SET_LOADING_MSG",
    "value": "Storing data on IPFS",
  },
  Object {
    "type": "SET_LOADING_MSG",
    "value": "Fueling with Ether",
  },
  Object {
    "type": "SET_LOADING_MSG",
    "value": "Registering identity on Ethereum",
  },
  Object {
    "params": Object {
      "mnemonic": "all all all all all all all all all all all all",
    },
    "routeName": "SeedPhrase",
    "type": "Navigation/NAVIGATE",
  },
]
`;

exports[`Registration action creators createIdentity should attempt to create an identity 2`] = `
Array [
  Array [
    "4f8d84403d760b5b3fc5426c90827dab",
  ],
]
`;

exports[`Registration action creators createIdentity should attempt to create an identity 3`] = `
Array [
  Array [
    Object {
      "data": "4f8d84403d760b5b3fc5426c90827dab",
      "pass": "secret",
    },
  ],
  Array [
    Object {
      "data": "Zm2Luz5JV2VCoSTPuUZtCgmA9rcZ2SY8umUJKzC5rtJAhUwMDQ6a",
      "pass": "secret",
    },
  ],
  Array [
    Object {
      "data": "KzC5rtJAhUwMDQ6aZm2Luz5JV2VCoSTPuUZtCgmA9rcZ2SY8umUJ",
      "pass": "secret",
    },
  ],
]
`;

exports[`Registration action creators createIdentity should attempt to create an identity 4`] = `
Array [
  Array [
    Object {
      "encryptedWif": "U2FsdGVkX19kQYx6vN6GahoZ9mbabreviated+=",
      "entropySource": "U2FsdGVkX19kQYx6vN6GahoZ9mbabreviated+=",
      "keyType": "ECDSA secp256k1",
      "path": "m/0/0",
    },
  ],
  Array [
    Object {
      "encryptedWif": "U2FsdGVkX19kQYx6vN6GahoZ9mbabreviated+=",
      "entropySource": "U2FsdGVkX19kQYx6vN6GahoZ9mbabreviated+=",
      "keyType": "ECDSA secp256k1",
      "path": "m/0/1",
    },
  ],
]
`;

exports[`Registration action creators createIdentity should attempt to create an identity 5`] = `
Array [
  Array [
    Object {
      "controllingKey": "U2FsdGVkX19kQYx6vN6GahoZ9mbabreviated+=",
      "did": "did:jolo:mockdid",
    },
  ],
]
`;

exports[`Registration action creators createIdentity should attempt to create an identity 6`] = `
Array [
  Array [
    "U2FsdGVkX19kQYx6vN6GahoZ9mbabreviated+=",
  ],
]
`;

exports[`Registration action creators createIdentity should attempt to create an identity 7`] = `
Array [
  Array [
    "Zm2Luz5JV2VCoSTPuUZtCgmA9rcZ2SY8umUJKzC5rtJAhUwMDQ6a",
  ],
]
`;

exports[`Registration action creators createIdentity should attempt to create an identity 8`] = `
Array [
  Array [
    "0x5000000000000000000000000000000000000000",
  ],
]
`;

exports[`Registration action creators createIdentity should attempt to create an identity 9`] = `
Array [
  Array [
    Object {
      "did": "did:jolo:mockdid",
      "ethereumKey": Object {
        "data": Array [],
        "type": "Buffer",
      },
      "ipfsHash": "QmYwAPJzv5CZsnA625s3Xf2nemtYgPpHdWEz79ojWnPbdG",
    },
  ],
]
`;

exports[`Registration action creators createIdentity should display exception screen in case of error 1`] = `
Array [
  Object {
    "params": Object {
      "errorMessage": "Mock registration error",
      "stackTrace": "mock registration error stack trace",
    },
    "routeName": "Exception",
    "type": "Navigation/NAVIGATE",
  },
]
`;

exports[`Registration action creators savePassword should attempt to save the password in the keychain 1`] = `
Array [
  Object {
    "routeName": "Entropy",
    "type": "Navigation/NAVIGATE",
  },
]
`;

exports[`Registration action creators savePassword should display exception screen in case of error 1`] = `
Array [
  Object {
    "params": Object {
      "errorMessage": "password could not be saved",
      "stackTrace": "mock pass error stack",
    },
    "routeName": "Exception",
    "type": "Navigation/NAVIGATE",
  },
]
`;

exports[`Registration action creators startRegistration should display exception screen in case of error 1`] = `
Array [
  Object {
    "params": Object {
      "errorMessage": "Provisioning failed",
      "stackTrace": "mock trace",
    },
    "routeName": "Exception",
    "type": "Navigation/NAVIGATE",
  },
]
`;

exports[`Registration action creators startRegistration should initiate  the registration process 1`] = `[Function]`;

exports[`Registration action creators submitEntropy should correctly navigate to route and provide the entropy 1`] = `
Array [
  Object {
    "params": Object {
      "encodedEntropy": "mockEntropy",
    },
    "routeName": "Loading",
    "type": "Navigation/NAVIGATE",
  },
]
`;

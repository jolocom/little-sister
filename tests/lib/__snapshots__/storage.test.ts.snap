// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storage lib abstractions around the library should attempt to execute a read query 1`] = `
Array [
  Array [
    "SELECT * FROM Mock",
    Array [],
    [Function],
    [Function],
  ],
]
`;

exports[`Storage lib abstractions around the library should attempt to execute a write query 1`] = `
Array [
  Array [
    "INSERT into MOCK VALUES(?)",
    Array [
      "mockValue",
    ],
  ],
]
`;

exports[`Storage lib abstractions around the library should open / provide a db instance with foreign key enforcement 1`] = `
Array [
  Array [
    "PRAGMA foreign_keys = ON;",
    Array [],
    [Function],
    [Function],
  ],
]
`;

exports[`Storage lib abstractions around the library should open / provide a db instance with foreign key enforcement 2`] = `
Array [
  Array [
    Object {
      "location": "default",
      "name": "LocalSmartWalletData",
    },
    [Function],
    [Function],
  ],
]
`;

exports[`Storage lib reading from the database should attempt to get all personas 1`] = `
Array [
  Array [
    Object {
      "transaction": [MockFunction],
    },
    Object {
      "text": "SELECT * FROM Personas",
      "values": Array [],
    },
  ],
]
`;

exports[`Storage lib writing data to the database should attempt to add a derived key 1`] = `
Array [
  Array [
    Object {
      "transaction": [MockFunction],
    },
    Object {
      "text": "INSERT INTO Keys (encryptedWif, path, entropySource, keyType) VALUES (?, ?, ?, ?)",
      "values": Array [
        "mockWif",
        "m/0/3'/0",
        "encEntropy",
        "ECDSA",
      ],
    },
  ],
]
`;

exports[`Storage lib writing data to the database should attempt to add a master key 1`] = `
Array [
  Array [
    Object {
      "transaction": [MockFunction],
    },
    Object {
      "text": "INSERT INTO MasterKeys (encryptedEntropy, timestamp) VALUES (?, ?)",
      "values": Array [
        "mockEntropy",
        946681200000,
      ],
    },
  ],
]
`;

exports[`Storage lib writing data to the database should attempt to add a persona 1`] = `
Array [
  Array [
    Object {
      "transaction": [MockFunction],
    },
    Object {
      "text": "INSERT INTO Personas (did, controllingKey) VALUES (?, ?)",
      "values": Array [
        "did:jolo:mock",
        "mockEncryptedWif",
      ],
    },
  ],
]
`;

exports[`Storage lib writing data to the database should attempt to create the db tables 1`] = `
Array [
  Array [
    Object {
      "transaction": [MockFunction],
    },
    Object {
      "text": "CREATE TABLE IF NOT EXISTS Personas (did VARCHAR(75) PRIMARY KEY, controllingKey VARCHAR(110) NOT NULL UNIQUE, FOREIGN KEY(controllingKey) REFERENCES Keys(encryptedWif) )",
    },
  ],
  Array [
    Object {
      "transaction": [MockFunction],
    },
    Object {
      "text": "CREATE TABLE IF NOT EXISTS Keys (encryptedWif VARCHAR(110) PRIMARY KEY, path TEXT NOT NULL, entropySource VARCHAR(100) NOT NULL, keyType TEXT NOT NULL, FOREIGN KEY(entropySource) REFERENCES MasterKeys(encryptedEntropy) )",
    },
  ],
  Array [
    Object {
      "transaction": [MockFunction],
    },
    Object {
      "text": "CREATE TABLE IF NOT EXISTS MasterKeys (encryptedEntropy VARCHAR(100) PRIMARY KEY, timestamp DATE NOT NULL)",
    },
  ],
]
`;
